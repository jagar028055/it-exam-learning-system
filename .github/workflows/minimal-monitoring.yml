name: Minimal Monitoring (Ultra-Light)

# 超軽量監視: 1日2回のみ実行で月間60分以下
on:
  schedule:
    # 朝夕2回のみ（平日）
    - cron: '0 9,18 * * 1-5'    # 平日 9時・18時
    # 週末は1回のみ  
    - cron: '0 12 * * 6,0'      # 土日 12時
  workflow_dispatch:
    inputs:
      action:
        description: 'Monitoring action'
        required: true
        default: 'full-check'
        type: choice
        options:
        - full-check
        - ping-only
        - backup-only

env:
  SERVICE_URL: https://itexam-study-system.onrender.com

jobs:
  minimal-monitoring:
    runs-on: ubuntu-latest
    timeout-minutes: 3  # 3分でタイムアウト
    
    steps:
    - name: Quick service check
      id: check
      run: |
        echo "🔍 Quick service health check..."
        
        # 1. Ping test (keep-alive)
        ping_result=$(curl -s -m 10 -w "%{http_code}:%{time_total}" $SERVICE_URL/ping || echo "failed:999")
        ping_status=$(echo $ping_result | cut -d: -f1)
        ping_time=$(echo $ping_result | cut -d: -f2)
        
        echo "ping_status=$ping_status" >> $GITHUB_OUTPUT
        echo "ping_time=$ping_time" >> $GITHUB_OUTPUT
        
        # 2. Health check (only if ping fails)
        if [ "$ping_status" != "200" ]; then
          echo "⚠️  Ping failed, checking health endpoint..."
          health_result=$(curl -s -m 15 -f $SERVICE_URL/healthz && echo "ok" || echo "failed")
          echo "health_status=$health_result" >> $GITHUB_OUTPUT
          echo "error_detected=true" >> $GITHUB_OUTPUT
        else
          echo "✅ Service responsive (${ping_time}s)"
          echo "error_detected=false" >> $GITHUB_OUTPUT
        fi
        
        # 3. Performance warning (>5s)
        if (( $(echo "$ping_time > 5" | bc -l 2>/dev/null || echo "0") )); then
          echo "performance_warning=true" >> $GITHUB_OUTPUT
          echo "⚠️  Slow response: ${ping_time}s"
        else
          echo "performance_warning=false" >> $GITHUB_OUTPUT
        fi

    # エラー時のみIssue作成（使用量節約）
    - name: Create error issue (only on failure)
      if: steps.check.outputs.error_detected == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const pingStatus = '${{ steps.check.outputs.ping_status }}';
          const pingTime = '${{ steps.check.outputs.ping_time }}';
          const healthStatus = '${{ steps.check.outputs.health_status }}';
          const timestamp = new Date().toISOString();
          
          // 既存のエラーIssueをチェック（重複防止）
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'service-down,auto-generated',
            state: 'open'
          });
          
          if (existingIssues.data.length > 0) {
            console.log('🔄 Service down issue already exists, updating...');
            const issueNumber = existingIssues.data[0].number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `**Update ${timestamp}**\n- Ping: ${pingStatus}\n- Health: ${healthStatus}\n- Response Time: ${pingTime}s`
            });
          } else {
            console.log('🚨 Creating new service down issue...');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Service Down - Minimal Monitor Detection',
              body: `## Service Status Alert\n\n**Detection Time**: ${timestamp}\n**Ping Status**: ${pingStatus}\n**Health Check**: ${healthStatus}\n**Response Time**: ${pingTime}s\n\n### Quick Actions\n1. Check Render dashboard\n2. Review recent deployments\n3. Manual service restart if needed\n\n*🤖 Auto-generated by minimal monitoring*`,
              labels: ['service-down', 'high-priority', 'auto-generated']
            });
          }

    # パフォーマンス警告（軽量）
    - name: Performance warning (if slow)
      if: steps.check.outputs.performance_warning == 'true'
      run: |
        echo "⚡ Performance Warning: Service responding slowly (${{ steps.check.outputs.ping_time }}s)"
        echo "Consider checking:"
        echo "- Cold start (Render Free tier)"
        echo "- Database performance"
        echo "- Resource usage"

  # 週1回のみバックアップ（日曜のみ）
  weekly-backup:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 12 * * 0'  # 日曜12時のみ
    timeout-minutes: 5
    
    steps:
    - uses: actions/checkout@v4
    - name: Create simple backup marker
      run: |
        echo "📦 Creating backup marker (weekly)..."
        mkdir -p backups
        echo "Backup marker created: $(date)" > "backups/backup_$(date +%Y%m%d).txt"
        
        # Simple git commit
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add backups/
        git commit -m "📦 Weekly backup marker - $(date +%Y-%m-%d)" || echo "No changes to commit"
        git push origin main || echo "Push failed or no changes"